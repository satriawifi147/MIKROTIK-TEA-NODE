<%= render(Primer::OpenProject::PageHeader.new) do |header| %>
  <% if show_state? %>
    <% header.with_title(data: { 'test-selector': 'project-query-name'}) { page_title } %>

    <% header.with_actions do %>
      <%= render(Primer::Alpha::ActionMenu.new) do |menu|
        menu.with_show_button(icon: 'op-kebab-vertical', 'aria-label': t(:label_more), data: { 'test-selector': 'project-more-dropdown-menu' })

        if gantt_portfolio_project_ids.any?
          menu.with_item(
            tag: :a,
            label: t('projects.index.open_as_gantt'),
            href: gantt_portfolio_query_link,
            id: 'projects-index-open-as-gantt',
            content_arguments: { target: '_blank' }
          ) do |item|
            item.with_leading_visual_icon(icon: 'op-view-timeline')
          end
        end

        menu.with_item(
          tag: :a,
          label: t(:label_overall_activity),
          href: activities_path
        )do |item|
        item.with_leading_visual_icon(icon: 'tasklist')
      end

        if current_user.logged? && query_saveable?
          menu.with_item(
            label: t('button_save'),
            href: new_projects_query_path,
            content_arguments: {
            data: {
              controller: "params-from-query",
              'application-target': "dynamic",
              'params-from-query-allowed-value': '["filters"]'
            }
          }
          ) do |item|
            item.with_leading_visual_icon(icon: :'op-save')
          end
        end

        menu.with_item(
          label: t('js.label_export'),
          content_arguments: { 'data-show-dialog-id': EXPORT_MODAL_ID }
        ) do |item|
          item.with_leading_visual_icon(icon: 'sign-out')
        end

        menu.with_item(
          label: t(:'queries.configure_view'),
          content_arguments: { 'data-show-dialog-id': Projects::ConfigureViewModalComponent::MODAL_ID }
        ) do |item|
          item.with_leading_visual_icon(icon: :gear)
        end

        if query.persisted?
          menu.with_item(
            label: t(:button_delete),
            href: projects_query_path(query),
            scheme: :danger,
            form_arguments: {
              method: :delete,
              data: {
                confirm: t("text_are_you_sure"),
                turbo: 'false'
              }
            }
          ) do |item|
            item.with_leading_visual_icon(icon: 'trash')
          end
        end
      end
      %>
    <% end %>

  <% else %>
      <% header.with_title(mt: 2, mb: 2, data: { 'test-selector': 'project-query-name'}) do
        primer_form_with(model: query,
                         url: projects_queries_path,
                         scope: 'query',
                         data: {
                           controller: "params-from-query",
                           'application-target': "dynamic",
                           'params-from-query-allowed-value': '["filters"]'
                         },
                         id: 'project-save-form') do |f|
          render(Queries::Projects::Create.new(f))
        end
      end %>
  <% end %>
<% end %>

<% if show_state? %>
  <%# TODO: move into a component %>
  <%= render(Primer::Alpha::Dialog.new(title: t('js.label_export'),
                                       id: EXPORT_MODAL_ID)) do |d|
    d.with_header(variant: :large)
    d.with_body do
      render partial: '/projects/project_export_modal'
    end
  end %>

  <%= render(Projects::ConfigureViewModalComponent.new(query:)) %>
<% end %>
